/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Sphere: THREE.Mesh
    Sphere001: THREE.Mesh
    Sphere002: THREE.Mesh
    Sphere003: THREE.Mesh
    Sphere004: THREE.Mesh
    Sphere005: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/1-D.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Sphere.geometry} material={nodes.Sphere.material} />
      <mesh geometry={nodes.Sphere001.geometry} material={nodes.Sphere001.material} position={[0, 0, -2]} />
      <mesh geometry={nodes.Sphere002.geometry} material={nodes.Sphere002.material} position={[0, 0, 1.99]} />
      <mesh geometry={nodes.Sphere003.geometry} material={nodes.Sphere003.material} position={[0, 0, 3.99]} />
      <mesh geometry={nodes.Sphere004.geometry} material={nodes.Sphere004.material} position={[0, 0, 5.99]} />
      <mesh geometry={nodes.Sphere005.geometry} material={nodes.Sphere005.material} position={[0, 0, 7.99]} />
    </group>
  )
}

useGLTF.preload('/1-D.gltf')
